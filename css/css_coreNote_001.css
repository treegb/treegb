/* ** Global default block start. */
    body {
        margin: 0 1.5em 6em;
        padding-top: 4em;
        overflow: auto;
        font-size: 1em;
        font-family: sans-serif;
        /*border: 1px green dashed;*/
    }

    header {
        margin-top: 0;
        margin-bottom: 2em;
        /*border: 1px red solid;*/
    }
    
    h1 {
        padding: 0 1em;
        margin: 0;
        box-sizing: border-box;
        float: left;
        max-width: calc(70% - 0.5em);
        text-align: center;
        /*border: 1px red solid;*/
    }

    .subtitle {
        float: right ;
        max-width: calc(30% - 0.5em);
        padding-top: 1em;
        /*border: 1px red solid;*/
    }
    
    .subtitle p {
        color: #777;
        margin: 0 1em 0.7em 0;
        border-left: 0.0625em solid #EAEAEA;
        padding-left: 0.4em;
        /*border: 1px red solid;*/
    }
    
    header:after{
        content: "";
        display: block;
        clear: both;
    }
    
    .section1, .section1.forceDisplay {
        margin-bottom: 1em;
        padding: 1em 1em 1em 2em;
        background-color: #FAFAFA;
        border-radius: 0.3em;
        position: relative;
        /*border: 1px blue solid;*/
        transition: all 1.4s;
    }
    
    .section1.forceHide  {
        padding: 0.2em 1em 0.2em 2em;
        background-color: #FFFFFF;
    }
    
    h2, h3, h4, h5, h6 {
        margin-top: 0.6em ;
        margin-bottom: 0.6em;
    }

    .section1 h2, .section1.forceDisplay h2 {
        /* ** This value does not use <0.3s> and adjust to somewhat more intuitive. */
        transition: all 0.8s;
        /* border: 1px solid red;*/
    }
    
    .section1.forceHide h2 {
        color: #CCC;
    }
    
    /* ** Deal with TOC icon and opacity. */
    .section1#toc h2 {
        /* ** These 2 not the best effect. */
        /*text-decoration: underline;*/
        /*border-bottom: 3px solid #EEE;*/
        
        position: relative;
        /* ** <height: 1.22em;> is the closest value to "mimic" h2 text height when h2 title don't have text in it. */
        /*height: 1.22em;*/
        /* ** Alter this height value in order to adjust TOC logo background size. */
        height: 1.1em;
        margin-top: 0.3em;
        /*border: 1px solid red;*/
    }
    
    /* ** Use <:after> pseudo element to apply background, the reason I use this is I want to adjust background opacity. */
    .section1#toc h2:after, .section1#toc.forceDisplay h2:after {
        position: absolute;
        content: "";
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        /* ** Not best. */
        /*background-image: url("../img/TOC-icon1.svg");*/
        /* ** Very great! Simple, intuitive, blend with context. */
        /*background-image: url("../img/TOC-icon3.svg");*/
        /* ** Very great! Simple, strong, intuitive, blend with context. Even better than <TOC-icon3.svg>. */
        background-image: url("../img/TOC-icon5.svg");
        /* ** Playing around balance between <blending with context> and <attraction>, but found <TOC-icon5.svg> works better. */
        /*background-image: url("../img/TOC-icon6.svg");*/
        /* ** Good. */
        /*background-image: url("https://image.flaticon.com/icons/png/512/56/56763.png");*/
        /* ** Distracted. */
        /*background-image: url("http://www.tanksintown.be/titmob/symb-menu.png");*/
        /* ** Great! BUt this making distracted too. */
        /*background-image: url("../img/TOC-icon4.png");*/
        /* ** rounded feeling is not intuitive when combine with <ul>, <li> list native feeling. */
        /*background-image: url("https://cdn4.iconfinder.com/data/icons/basic-ui-elements/700/06_menu_grid-512.png");*/
        /* ** Very bad, not intuitive. */
        /*background-image: url("https://cdn2.iconfinder.com/data/icons/ui-icon-part-2/128/menu-512.png");*/
        background-size: auto 100%;
        background-position: 0% 50%;
        background-repeat: no-repeat;
        /* ** This value does not use <0.3s> and adjust to somewhat more intuitive. */
        transition: all 0.8s;
        /*border: 1px solid blue;*/
    }
    
    .section1#toc.forceHide h2:after {
        opacity: 0.25;
    }
    
    .section1 .btnToggleHide, .section1.forceDisplay .btnToggleHide {
        position: absolute;
        /* ** <top> value should update with <.section1> margin-top and margin-bottom. */
        top: 1em;
        bottom: 1em;
        left: calc(-1.45em - 0.3em - 0.3em);
        width: 0.3em;
        content: "";
        background-color: #E3E3E3;
        background-clip:content-box;
        /*box-sizing: border-box;*/
        padding: 0 1.45em;
        /* ** When transition from "fold" to "unflod", there is no <transition-property: width>. */
        transition-property: top, bottom;
        transition-duration: 0.3s;
        cursor: pointer;
        /*border: 1px rgba(0, 0, 255, 0.9) solid;*/
    }
    
    .section1.forceHide .btnToggleHide {
        background-color: transparent;
        border: 0.1875em solid #CCC;
        /* ** <top> value should update with <.section1> margin-top and margin-bottom. */
        top: 0em;
        bottom: 0em;
        left: 0em;
        padding: 0em;
        width: 1.2em;
        transition-property: width, top, bottom;
    }
    
    .section1 .foldableContent, .section1.forceDisplay .foldableContent {
        /*border: 1px red solid;*/
        transition: all 2.3s;
    }
    
    .section1.forceHide .foldableContent {
        transition: all 0s;
        opacity: 0;
        /* ** Don't use <display: none> because transition will not work on this, use <visibility> instead. */
        /*display: none;*/
        visibility: hidden;
        position: absolute;
    }
    
    .section1 ul {
        /* ** Overwrite browser default value and reset to 0. */
        margin: 0;
        margin-top: 0.8em;
        margin-bottom: 0.8em;
        /*border: 1px red solid;*/
        /*background-color: hsla(140, 40%, 80%, 0.5);*/
    }
    
   .section1 p, .section1 li {
        /* ** <line-height> 140% is minimum needed in order to make <code1> not conflict, 160% is much relax distance at visual feeling. */
        /*line-height: 140% ;*/
        line-height: 160% ;
        /* ** Overwrite browser default value and reset to 0. */
        margin: 0em;
        /*border: 1px green solid;*/
    }
    
    .section1 li {
        /*list-style-type: disc;*/
        list-style-type: square;
        margin-top: 0.8em;
        margin-bottom: 0.8em;
        padding-right: 1.6em;
        background-image: url("../img/scrolling-process-indicator.svg");
        background-size: 0.8em 100%;
        background-position: 100% 50%;
        background-repeat: no-repeat;
        /* ** Because of <.liScrollJumpBtn>. */
        position: relative;
        /*border: 1px green solid;*/
        /*background-color: hsla(210, 40%, 80%, 0.8);*/
    }
    
    .section1 li .liScrollJumpBtn {
        /* ** Testing "scrollTO". */
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        width: 1em;
        cursor: pointer;
        /*border: 1px solid red;*/
    }
    
    
    /* ** <jumpOptMain> and corresponding DOM structure in tail of body, with <position: fixed;>. */
        .jumpOptMain {
            position: fixed;
            margin: 0;
            padding: 0;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            /*top: 0;
            bottom: 0;
            left: 0;
            right: 0;*/
            display: flex;
            flex-direction: column;
            flex-wrap: wrap-reverse;
            justify-content: flex-start;
            align-content: flex-start;
            align-items: stretch;
            /* ** This is needed because <blockquote > * {z-index: 1 ;}>, and <.sideMenu {z-index: 2;>. */
            z-index: 3;
            opacity: 1;
            cursor: pointer;
            /* ** Very detailed adjust those settings for best feeling. */
            transition:
                visibility 0s
                , opacity 1.0s ease-out 0.1s
                , transform 0.3s;
        }
        
        .jumpOptMain.hide {
            visibility: hidden;
            opacity: 0;
            transform: translateY(-100vh);
            /* ** Very detailed adjust those settings for best feeling. Notice those <transition-delay> is important. */
            transition:
                visibility 0.1s
                , opacity 0.1s linear 0s
                , transform 0s linear 0.1s;
            /*border: 3px solid red;*/
        }
        
        .jumpOptMain * {
            margin: 0;
            padding: 0;
        }
        
        .jumpOptMain > * {
            background-image: linear-gradient(170deg, rgba(0, 0, 0, 0.3) 0%, rgba(0, 0, 0, 0.25) 4%, rgba(0, 0, 0, 0.25) 8%, rgba(0, 0, 0, 0.27) 12%, rgba(0, 0, 0, 0.34) 57%, rgba(0, 0, 0, 0.38) 84%, rgba(0, 0, 0, 0.36) 90%, rgba(0, 0, 0, 0.34) 100%);
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-content: flex-start;
            align-items: center;
            border: 0.0625em solid rgba(255, 255, 255, 0.3);
        }
        
        .jumpOptMain .jumpOptBmk {
            flex-direction: row;
            flex-wrap: wrap;
            justify-content: flex-start;
            align-content: stretch;
            align-items: center;
        }
        
        .jumpOptMain .jumpOptUpDown, .jumpOptMain .jumpOptBackAbrt {
            flex-basis: 48%;
            flex-grow: 1;
        }
        
        .jumpOptMain .jumpOptUpDown {
            width: 15em;
        }
        
        .jumpOptMain .jumpOptBackAbrt {
            width: 3.5em;
        }
        
        .jumpOptMain .jumpOptUp {
            order: 3;
        }
        
        .jumpOptMain .jumpOptDown {
            order: 4;
        }
        
        .jumpOptMain .jumpOptBack {
            order: 2;
        }
        
        .jumpOptMain .jumpOptAbrt {
            order: 1;
        }
        
        .jumpOptMain .jumpOptBmk {
            width: calc((100% - 15em - 3.5em) * 1);
            flex-basis: 14%;
            flex-grow: 1;
        }
        
        .jumpOptMain .jumpOptBmk1Jump {order: 6;}
        .jumpOptMain .jumpOptBmk1Save {order: 5;}
        .jumpOptMain .jumpOptBmk2Jump {order: 8;}
        .jumpOptMain .jumpOptBmk2Save {order: 7;}
        .jumpOptMain .jumpOptBmk3Jump {order: 10;}
        .jumpOptMain .jumpOptBmk3Save {order: 9;}

        .jumpOptMain .jumpOptBmkJump .textPcent, .jumpOptMain .jumpOptBmkSave .iconCtn {
            display: flex;
            justify-content: flex-end;
            /* ** Setting font-size here instead of <.textPcent> exclusively because width calculate need using em as base unit too. */
            font-size: 2.0em;
            width: calc(50% + 0em);
            /*border: 2px purple solid;*/
        }
        
        .jumpOptMain .textPcent {
            font-size: 2.0em;
            color: white;
            opacity: 0.7;
        }
        
        .jumpOptMain .textPcentPcentSign {
            font-size: 0.7em ;
            font-weight: normal;
            transform: translate(0.1em, 0.2em);
            opacity: 0.7;
        }
        
        .jumpOptMain .textDscrpt {
            font-size: 1em;
            margin-left: 1.7em;
            color: white;
            font-weight: bold;
            opacity: 0.15;
            /*border: 2px teal solid;*/
        }
        
        .jumpOptMain .icon {
            display: block;
            width: 2.2rem;
            opacity: 0.7;
        }
        
        .jumpOptMain .jumpOptDown .icon {
         transform: rotate(180deg);
        }
        
        .jumpOptMain .jumpOptUpDown .icon {
            width: 2.3rem;
        }
        
        /* ** Hover. */
        .jumpOptMain .icon.glow {
            display: none;
        }
        
        .jumpOptMain .jumpOptUp:hover .icon.dim, .jumpOptMain .jumpOptBack:hover .icon.dim, .jumpOptMain .jumpOptAbrt:hover .icon.dim {
            display: none;
        }
        
        .jumpOptMain .jumpOptUp:hover .icon.glow, .jumpOptMain .jumpOptBack:hover .icon.glow, .jumpOptMain .jumpOptAbrt:hover .icon.glow {
            display: block;
            opacity: 0.72;
            transform: scale(1.2);
        }
        
        .jumpOptMain .jumpOptDown:hover .icon.dim {
            display: none;
        }
        
        .jumpOptMain .jumpOptDown:hover .icon.glow {
            display: block;
            opacity: 0.72;
            transform: rotate(180deg) scale(1.2);
        }
        
        .jumpOptMain .jumpOptBmkJump:hover .textPcent {
            transform: scale(1.1);
            transform-origin: calc(100% - 1.2em) 50%;
            opacity: 0.72;
            text-shadow: 0 0 0.375em white;
        }
        
        .jumpOptMain .jumpOptBmkJump:hover .textDscrpt {
            opacity: 0.4;
        }
        
        .jumpOptMain .jumpOptBmkSave:hover .icon.dim {
            display: none;
        }
        
        .jumpOptMain .jumpOptBmkSave:hover .icon.glow {
            display: block;
            transform: scale(1.1);
            opacity: 0.72;
        }
        
        .jumpOptMain .jumpOptBmkSave:hover .textDscrpt {
            opacity: 0.4;
        }
    /* ** End of <jumpOptMain> and corresponding DOM structure. */
    
    
    .section1 p {
        margin-top: 0.8em;
        margin-bottom: 0.8em;
        /*border: 1px solid DarkGoldenRod;*/
        /*background-color: hsla(45, 40%, 80%, 0.8);*/
    }

    /* ** Probably will not have much use anymore. */
    .section1 .eye, .section1 .eyeIndex {margin-right: 0.5em ; vertical-align: middle ;}



    /* ** Put these code first, to unset <strong> and <b> style. */
    strong, b {
        font-weight: normal;
    }


    /* ** lihed stand for "li header". */
    .section1 .lihed {
        /* ** Useless. */
        /*text-decoration: underline;
        text-decoration-color: rgba(0, 0, 0, 0.4);*/
        
        /* ** Theme - thick underline. */
        /*display: inline-block;
        border-bottom: 0.1875em solid rgba(0, 0, 0, 0.10);
        margin-bottom: 0.1875em;
        font-weight: bold;*/
        
        /* ** Theme - dark background. */
        display: inline-block;
        border-radius: 0.1875em;
        background-color: #E9E9E9;
        margin: 0.125em 0;
        /*margin-bottom: 0.1875em;*/
        /* ** = padding: 1px 5px;*/
        padding: 0.0625em 0.3125em;
        /*font-weight: bold;*/
        font-weight: normal;
        /*border: 0.0625em solid #CCC;*/
    }
    
    .section1 .lihed * {
        /*font-weight: bold;*/
        font-weight: normal;
    }

    .section1 .strong1 {
        font-weight: bold;
        /*font-size: 1.14em;*/
        font-size: 1em;
        color: rgba(0, 0, 0, 0.8);
    }

    .section1 .udr {
        /* ** When using <display: inline;>, vertical margin don't have effect. */
        display: inline;
        border-bottom: 0.0625em solid #666;
        /* ** Don't use <text-decoration: underline;>, the effect is bad looking. */
        padding-left: 0.2em;
        padding-right: 0.2em;
    }

    .section1 .ital {font-style: italic ;}
    
    /* ** Used at command code, becuase some character for example "I" and "l" is not distinguishable when using <sans-serif>. */
    .section1 .mono {
        font-family: monospace;
        font-size: 1.22em;
    }
    
    .section1 .mono.code1 {
        font-size: 1.22em;
    }
    
    /* ** <code> class.
       ** Aware below have selector overwrite <.code1> property! */
    .section1 .code1 {
        /* ** When using <display: inline;>, vertical margin don't have effect. */
        display: inline-block ;
        font-size: 1em ;
        /* ** Notice, these style is very carefully "design". In general, I tried to make line-height of <p> as small as possible, and padding and margin of <.code1> as big as possible, but since these 2 factor conflict, this is the best setting I can get.
           ** Use <line-height> (at least 100%) or <padding> can create vertical spacing. Though they both can do the same job, set <line-height> to 100% will cause space problem if <.code1> start to wrap to more than one line (because <display: inline-block>) and have no line height. */
        margin: 0.0625em 0;
        padding: 0 0.1875em;
        line-height: 130% ;
        border-radius: 0.1875em;
        background-color: #F9F9F9;
        border: 0.0625em solid #AAA;
    }
    
    /* ** Aware these will overwrite <.code1> property! */
    .section1 .code1 {
        background-color: #FFF;
    }
    
    .section1 .lihed .code1 {
        background-color: transparent;
        border: 0.0625em solid #B9B9B9;
    }
    
    /* ** Consider <.cbk1> selector here only set for [fallback / basic] property (when javascirpt fail to run).
       Advanced value please sset at below <.codeBlockCtn> area. */
    
    /* ** Aware, even using <.pre>, you need to substitute < to &lt; and > to %gt; , browser will rander tag name and you can use style in <.pre> too! */
    .section1 .pre {
        white-space: pre-wrap;
    }
    
    .section1 .cbk1 {
        display: block;
        /*border-left: 0.55em solid #EEE;*/
        margin: 0;
        
        /* ** Aware here use 2 direction margin.
           ** These value should update with <.btnToggleHideCodeBlock>. <0.5em> here is to add some little extra space so when use cursor to select text, cursor will not accidentally click on <.btnToggleHideCodeBlock>. */
        margin-left: calc(0.8em + (0.6em * 2) + 0.3em + 0.5em);
        padding-left: 0;
        /*border: 1px solid red;*/
        /*background-color: hsla(0, 40%, 80%, 0.5);*/
    }



    /* ** Toggle [fold // unfold] code block (<cbk1>). those DOM and class property is generate by javascript. */
    /* ** <.codeBlockCtn>. */
    
    .section1 .codeBlockCtn, .section1 .codeBlockCtn.forceDisplay {
        position: relative;
        margin: 0;
        /* ** Nagative margin. Because margin collapse of <.cbk1> don't extend to outside of <.codeBlockCtn>, it cause problem - double spacing than EXPECT. My page design is building on EXPECT every element (p, ul, li, div ...) will have margin collapse finally become same single spacing result instead of incrementing, but <.codeBlockCtn {overflow: hidden;}> and <.codeBlockCtn .cbk1 {overflow: auto;}> BLOCK THIS BEHAVIOR, causing double spacing than expect.
           The solution is set <.codeBlockCtn> margin to nagative, exactly 0.8em, <.codeBlockCtn .cbk1> and <blockquote> to 0, and let the rest inside have same margin collapse effect. */
        margin-top: -0.8em;
        margin-bottom: -0.8em;
        padding: 0;    
        /* ** This transition have no effect now because I have no useful property to make transition effect in <.section1 .codeBlockCtn.hide>. I keep it here for placeholder. */
        transition: all 1.4s;
        /* ** This fix <.cbk1> margin collapse problem, because they use 2 direction margin. */
        overflow: hidden;
        /*border: 1px coral solid;*/
    }
    
    .section1 .codeBlockCtn.forceHide {
        margin-top: -0.8em;
        margin-bottom: -0.8em;
        /* ** This adjust <.codeBlockCtn> height, the more the value, the more extra spacing with [up // down] siblings you get.
           Notice, this value can be any value but must BIGGER THAN <height> of <.codeBlockCtn.forceHide .btnToggleHideCodeBlock>. */
        min-height: 1.9em;
        /*border: 1px solid red;*/
        /*background-color: hsla(290, 40%, 80%, 0.5);*/
    }
    
    /* ** <.btnToggleHideCodeBlock>. */
    
    .section1 .codeBlockCtn .btnToggleHideCodeBlock
    , .section1 .codeBlockCtn.forceDisplay .btnToggleHideCodeBlock {
        position: absolute;
        /* ** <top> and <bottom> value should update with elements inside <.cbk1> (like ul, li, p ...) margin-top and margin-bottom. */
        top: 0.8em;
        bottom: 0.8em;
        left: 0.8em;
        width: 0.3em;
        content: "";
        /*background-color: #E3E3E3;*/
        background-color: #000;
        opacity: 0.05;
        background-clip: content-box;
        padding: 0 0.6em;
        cursor: pointer;
        /*border: 1px red solid;*/
        /*background-color: hsla(120, 40%, 80%, 1);*/
    }
    
    .section1 .codeBlockCtn.forceHide .btnToggleHideCodeBlock {
        background-color: transparent;
        opacity: 0.25;
        background-image: url("../img/coreNote_codeBlock-arrow.svg");
        background-size: 100% 100%;
        background-origin: content-box;
        top: 50%;
        transform: translateY(-50%);
        /* ** This adjust <.codeBlockCtn.forceHide .btnToggleHideCodeBlock> height, the more the value, the more icon height you get.
           Notice, this value can be any value but must SMALLER THAN <min-height> of <.codeBlockCtn>. */
        height: 0.88em;
        /* ** <0.88em> should update with <height>. <150/200> is the ratio of the background image. Since we didn't specific different <box-sizing>, this formula is enough. */
        width: calc(0.88em * (150/200));
        left: 0;           
        padding: 0;
        padding: 0 0.6em;
        /* ** <0.29em> is adjust by imprecise visual feeling, not by math.
           And <0.8em> should update with <.section1 .codeBlockCtn .btnToggleHideCodeBlock>. */
        margin-left: calc(0.8em - 0.29em);
        /*border: 1px solid red;*/
        /*background-color: hsla(120, 40%, 80%, 1);*/
    }
    
    /* ** <.cbk1>. */
    
    .section1 .codeBlockCtn .cbk1
    , .section1 .codeBlockCtn.forceDisplay .cbk1 {
        overflow: auto;
        margin-top: 0;
        margin-right: 0;
        margin-bottom: 0;
        /* ** <margin-left> set at earlier place, not here. */
        /* ** Good looking, but too long. */
        /*transition: all 2.3s;*/
        transition: all 0.7s;
        /*border: 1px orange solid;*/
    }
    
    .section1 .codeBlockCtn.forceHide .cbk1 {
        transition: all 0s;
        opacity: 0;
        /* ** Don't use <display: none> because transition will not work on this, use <visibility> instead. */
        /*display: none;*/
        visibility: hidden;
        position: absolute;
    }
    
    
    /* ** If <ul> is direct child of <.cbk1>, reduce it's padding. */
    
    .section1 .codeBlockCtn .cbk1 > ul {
        padding-left: 1.1em;
    }
    
    
    
    /* ** Change anchor color according different situation. */
    .section1 a, .section1 a:link, .section1 a:visited {
        text-decoration: none;
    }
    
    .section1 a:link {
        /* ** Browser default color. */
        /*color: #0000EE;*/
        color: #0000d3;
        /*color: #5300d1;*/
    }
    
    .section1 a:visited {
        /* ** Browser default color. */
        /*color: #551A8B;*/
        color: #0000d3;
    }
    
    .section1 a:hover, .section1 a:focus {
        color: #5300d1;
        text-decoration: underline;
    }


    /* ** I can wrap <q> in <cbk1> now so this is useless now?*/
    .section1 .bquote {margin: 1em 3em 1em 2em ; padding-left: 1em ;  border-left: 5px solid #E5E5E5 ; line-height: 170% ; color: #666;}
    
    
    /* ** Block quote. */
    blockquote {
        /* This margin setting related to <.section1 .codeBlockCtn> section. */
        margin: 0;
        padding-left: 2.0em;
        position: relative;
    }
    
    /* ** set different opacity. */
    blockquote:after {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        background-image: url("../img/utf8_201C.svg");
        background-repeat: no-repeat;
        background-position: 0% 0%;
        /* ** 1.5em = 24 px; */
        background-size: 1.5em auto;
        opacity: 0.07;
        z-index: 0;
    }
    
    /* ** If don't set all direct child except <blockquote:after> to higher z-index, <blockquote:after> will overlap all content. */
    blockquote > * {
        position: relative;
        z-index: 1;
    }
    
    /* ** Inline quote. */
    q:before {
        content: "\201C";
        font-size: 2em;
        /*display: inline-block;
        transform: translateY(0.2em);*/
        position: relative;
        top: 0.3em;
        margin-left: 0.2em;
        margin-right: 0.07em;
        color: #AAA;
        /* ** Don't know why <line-height> cause more unexpecting spacing, but seems so. */
        line-height: 10%;
    }

    q:after {
        content: "\201D";
        font-size: 2em;
        /*display: inline-block;
        transform: translateY(0.2em);*/
        position: relative;
        top: 0.3em;
        margin-right: 0.2em;
        margin-left: 0.07em;
        color: #AAA;
        /* ** Don't know why <line-height> cause more unexpecting spacing, but seems so. */
        line-height: 10%;
    }

    cite {
        font-style: italic;
        font-size: 0.9em;
        opacity: 0.4;
    }
    
    cite:before {
        content: "\2014";
        margin-left: 0.4em;
        margin-right: 0.2em;
    }

    .extMdaTnail img {max-height: 60px ; margin: 4px 8px ; padding: 3px ; border-color: #2b73b7 ; border-style: solid ; border-width: 1px 2px ;  border-radius: 15px 0 ; vertical-align: middle ;}

    /* Medium external media image. */
    .extMdaMediumCtn {display: block ; text-align: center ;}

    /* Medium external media image. */
    .extMdaMedium img {max-height: 200px ; margin: 4px 8px ; padding: 3px ; border-color: #2b73b7 ; border-style: solid ; border-width: 1px 2px ;  border-radius: 15px 0 ;}

    .mdaTnail img {max-height: 60px ; margin: 4px 8px ; padding: 3px ; border-color: #008800 ; border-style: solid ; border-width: 1px 2px ; border-radius: 15px 0 ; vertical-align: middle ;}

    a.ancrDest {position: relative ; top: -1em ;}

    /* ** <sideMenu>. */
    .sideMenu {
        position: fixed;
        z-index: 2;
        top: 0.6em;
        right: 0.4em;
        margin: 0;
        padding: 0;
        list-style-type: none;
        opacity: 1;
        /* ** This transition is direction from here to <.sideMenu.hide>. */
        transition: opacity 0.3s;
        /*border: 1px solid red;*/
    }
    
    .sideMenu.hide:hover {
        opacity: 1;
        /* ** This transition is direction from here to <.sideMenu.hide>. */
        transition: opacity 0.3s;
    }
    
    .sideMenu * {
        margin: 0;
        padding: 0;
        outline: none;
        line-height: 0;
        display: block;
    }
    
    .sideMenu .group {
        /*border-bottom: 1px solid #AAA;*/
        margin: 0 0 0.4375em;
        /* ** 0.125em is <.sideMenu .group:after> height. */
        padding: 0 0 calc(0.4375em + 0.125em);
        position: relative;
        /*border: 1px solid green;*/
    }
    
    /* ** Mimic some "border bottom" visual effect, but I want it to be shorter than <.btn> width, so I can't use border but have to use <:after> hack to do this visual effect. (Maybe try nagative padding next time?) */
    .sideMenu .group:after {
        position: absolute;
        content: "";
        display: block;
        /* ** These 2 line "2.1em" need to update with ".sideMenu .btn img {width: 2.1em;}". */
        left: calc((2.1em - (2.1em / 1.6)) / 2);
        right: calc((2.1em - (2.1em / 1.6)) / 2);
        bottom: 0;
        height: 0.125em;
        background-color: #CCC;
    }
    
    .sideMenu .group:last-of-type:after {
        /* ** Comment this because this seems more good looking. */
        /*display: none;*/
    }
    
    .sideMenu .btn {
        /*border-bottom: 3px solid #CCC;*/
        margin-bottom: 0.625em;
        padding: 0;
        /*padding: 1px 0;*/
        cursor: pointer;
        transition: transform 0.3s, visibility 0.3s, opacity 0.3s;
        /*border: 1px solid coral;*/
    }
    
    .sideMenu .btn:last-of-type {
        margin-bottom: 0;
    }
    
    /* ** Commented because now use <.sideMenu.hide:hover {opacity: 1;}>. */
    /*
    .sideMenu .btn.menu:hover .dim {
        display: none;
    }
    
    .sideMenu .btn.menu:hover .glow {
        display: block;
    }
    */
    
    .sideMenu .btn img {
        width: 2.1em;
    }

    .sideMenu ul {list-style-type: none ;}
    
    .sideMenu li {}
    
    
    
    /* Toggle click effect. */
    .sideMenu.hide {
        /* ** This is intended to "collapse" the whole <.sideMenu> box to until only <.btn.menu> space left. If <.sideMenu> don't "collapse", though you can't see those buttons, <.sideMenu> will still occupy the space, and you can't mouse click element under it.
           I tried to set all <.group> to <position: absolute>, this will work, however transition don't support <position> property. */
        height: 1px;
        opacity: 0.7;
        /* ** This transition is direction from here to <.sideMenu.hide:hover> OR <.sideMenu> (in mobile device). */
        transition: opacity 1.7s ease-out 1.1s;
    }
    
    .sideMenu.hide .group {
        visibility: hidden;
        /* ** Useless comment. */
            /* ** This is crucial to make parent <.sideMenu> collapse until only <.btn.menu> left. If <.sideMenu> don't collapse, though you can't see those buttons, <.sideMenu> will still occupy the space, and you can't mouse click element under it. */
        /*position: absolute;*/
    }

    /*keep <.sideMenu> as small as possible when <.hide>. */
    .sideMenu.hide .group.menu {
        /*position: static;*/
        visibility: visible;
        margin-bottom: 0;
        padding-bottom: 0;
    }
    
    .sideMenu.hide .group.menu + * {
        /* This should update with <.sideMenu .group> margin, padding sum. */
        margin-top: calc(0.4375em * 2 + 0.125em);
    }
        
    .sideMenu.hide .group:after {
        /*position: absolute;*/
        visibility: hidden;
    }
    
    /* ** for transition purpose only. */
    .sideMenu.hide .btn {opacity: 0;}
    
    .sideMenu.hide .btn.menu {opacity: 1;}
    
    .sideMenu.hide .btn.bkToTop {
        /*transform: translateX(calc(0em + (0.7em * 2)));*/
        transform: translateX(calc(0em + (0.7em * 2)));
    }
    .sideMenu.hide .btn.expand {
        /*transform: translateX(calc(0em + (0.7em * 3)));*/
        transform: translateX(calc(0em + (0.7em * 2)));
    }
    .sideMenu.hide .btn.compact {
        /*transform: translateX(calc(0em + (0.7em * 4)));*/
        transform: translateX(calc(0em + (0.7em * 2)));
    }
    .sideMenu.hide .btn.minimal {
        /*transform: translateX(calc(0em + (0.7em * 5)));*/
        transform: translateX(calc(0em + (0.7em * 2)));
    }
    
    .sideMenu .btn .glow {
        display: none;
    }
    
    .sideMenu .btn.clicked .glow {
        display: block;
    }
    
    .sideMenu .btn.clicked .dim {
        display: none;
    }

    
    /* ** iframe will never need to be randered, it will be deleted by javascript later anyway. I just need it's inside <.ifrmRefSrc> data and insert it like native in current DOM. Maybe this will save some rander time? */
    .ifrmRefDest {
        display: none;
    }
/* ** Global default block end. */



/* ** Media query block start. */
@media screen and (max-width: 600px) {
    body {
        margin: 0 1em 6em;
    }
}
/* ** Media query block end. */



/* ** Global overwrite block start. */

    /* ** Dim all text except title type element, <.strong1>. Because pure black text all over the page give too much pressure and casue loose focus. */
    .section1 {
        color: #333;
    }
    
    .section1 h2, .section1 .lihed {
        color: #000;
    }
    
    .section1 .code1 {
        /* ** Original color is #AAA. */
        border-color: #DDD;
    }
/* ** Global overwrite block end. */
